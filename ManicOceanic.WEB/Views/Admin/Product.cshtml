@model IEnumerable<ManicOceanic.DOMAIN.Entities.Products.Product>

<h1>Products</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
<thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProductNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Stock)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UnitOfMeasure)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CategoryId)
        </th>
        <th></th>
    </tr>
</thead>
    <tbody>
    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitOfMeasure)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryId)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |

                @Html.ActionLink("Delete", "ProductDelete", new {productNumber = item.ProductNumber}, new
                {
                    onclick = "return confirm('Are sure wants to delete: " + @item.Name +
                              " with product number: " + @item.ProductNumber + "?');"
                })
            </td>
        </tr>
    }
    </tbody>
</table>
